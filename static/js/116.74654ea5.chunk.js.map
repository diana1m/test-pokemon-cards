{"version":3,"file":"static/js/116.74654ea5.chunk.js","mappings":"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","sources":["redux/selectors.js","componets/CardList/CardList.styled.js","componets/CardItem/CardItem.styled.js","componets/CardItem/CardItem.js","componets/FilterTags/FilterTags.styled.js","componets/FilterTags/FilterTags.js","componets/FilterName/FilterName.styled.js","componets/FilterName/FilterName.js","componets/Pagination/Pagination.styled.js","componets/Pagination/Pagination.js","componets/CardList/CardList.js","pages/Pokemons.js"],"sourcesContent":["export const selectPokemons= state => state.pokemons.pokemons;\r\n\r\nexport const selectResult = state => state.pokemons.result;\r\n\r\nexport const selectPage = state => state.pokemons.page;\r\n\r\nexport const selectPerPage = state => state.pokemons.perPage;\r\n\r\nexport const selectCount = state => state.pokemons.count;\r\n\r\nexport const selectIsLoading = state => state.pokemons.isLoading;\r\n\r\nexport const selectIsLoadingPokemons = state => state.pokemons.isLoadingPokemons;\r\n\r\nexport const selectTypes = state => state.pokemons.types;\r\n\r\nexport const selectFilterName = state => state.pokemons.filterName;\r\n\r\nexport const selectFilterTags = state => state.pokemons.filterTags;","import styled from \"styled-components\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport const Container = styled.section`\r\n    max-width: 1280px; \r\n    margin: 40px auto;\r\n    padding: 0 30px;\r\n`\r\n\r\nexport const Notification = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin: 0 auto;\r\n    font-size: 36px;\r\n    height: 150px;\r\n    width: 80%;\r\n\r\n`\r\n\r\nexport const List = styled.ul `\r\n    max-width: 1280px;\r\n   \r\n    padding: 0;\r\n    margin-bottom: 30px;\r\n    margin-top: 30px;\r\n\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    gap: 50px;\r\n`\r\n\r\nexport const Btn = styled.button`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n   \r\n    width: 380px;\r\n    height: 50px;\r\n    margin: 0 auto;\r\n    margin-bottom: 40px;\r\n\r\n    background-color: #feffe0;\r\n    border: 3px solid #fad61f;\r\n    box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\r\n    border-radius: 10.3108px;\r\n\r\n    cursor: pointer;\r\n\r\n    font-weight: 600;\r\n    font-size: 18px;\r\n    line-height: calc(22 / 18);\r\n    text-transform: uppercase;\r\n    color: #373737;\r\n    \r\n    transition-property: background-color, border-color, color;\r\n    transition-duration: 0.4s;\r\n    transition-timing-function: ease;\r\n\r\n    &:hover{\r\n        background-color: #fad61f;\r\n        border-color: #feffe0;\r\n        color: #feffe0;\r\n    }\r\n\r\n    &:disabled{\r\n        background-color: white;\r\n        color: grey;\r\n        border: none;\r\n        cursor: not-allowed;\r\n    }\r\n`\r\n\r\nexport const WrapForBtn = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    padding-right: 140px;\r\n    max-width: 1280px;\r\n    margin-bottom: 30px;\r\n    @media (max-width: 768px) {\r\n    flex-wrap: wrap;\r\n    gap: 20px;\r\n    }\r\n`\r\n\r\nexport const BtnGoBack = styled(NavLink)`\r\n    display: block;\r\n    max-width: 180px;\r\n    padding: 12px 18px;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    border: none;\r\n    background-color: transparent;\r\n    border-radius: 10px;\r\n\r\n    color: #373737;\r\n    text-decoration-line: underline;\r\n    font-weight: 600;\r\n    font-size: 18px;\r\n    line-height: calc(22 / 18);\r\n    text-transform: uppercase;\r\n    letter-spacing: 0.06em;\r\n    \r\n    cursor: pointer;\r\n    transition: background-color 500ms ease;\r\n    &:hover,\r\n    &:focus {\r\n        color:#FBFCFB;\r\n        background-color: #fad61f;\r\n    }\r\n`","import styled from \"styled-components\";\r\n\r\nexport const typesColor = {\r\n    \"normal\": \"#BFBEBD\",\r\n    \"fighting\": \"#E04532\",\r\n    \"flying\": \"#37C5B0\",\r\n    \"poison\": \"#C02053\",\r\n    \"ground\": \"#8E5633\",\r\n    \"rock\": \"#557679\", \r\n    \"bug\": \"#93B45C\",\r\n    \"ghost\": \"#CFCA57\",\r\n    \"steel\" : \"#9AA1BF\",\r\n    \"fire\": \"#FF520C\",\r\n    \"water\": \"#6082C9\",\r\n    \"grass\": \"#3DAF08\",\r\n    \"electric\" : \"#2545C7\",\r\n    \"psychic\" : \"#B62AA7\",\r\n    \"ice\" :  \"#4EA3E5\",\r\n    \"dragon\" : \"#962EBD\",\r\n    \"dark\" : \"#686563\",\r\n    \"fairy\" : \"#D53CA4\",\r\n    \"unknown\" : \"#9BB9AF\",\r\n    \"shadow\" : \"#665353\",\r\n}\r\n\r\nexport const Wrapper = styled.li`\r\n    width: 200px;\r\n    padding: 15px;\r\n    background: #e6e3d2;\r\n    color: #1D1515;\r\n    box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\r\n    border-radius: 20px;\r\n    display: flex;\r\n    gap:15px;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    @media (max-width: 768px) {\r\n    width: 90%;\r\n    max-width: 480px;\r\n    font-size: 28px;\r\n    }\r\n`;\r\n\r\nexport const TitleCard = styled.h2`\r\n    font-size: 26px;\r\n    letter-spacing: 1.2;\r\n    color: #1D1515;\r\n\r\n    @media (max-width: 768px) {\r\n    font-size: 38px;\r\n    }\r\n`\r\n\r\nexport const Avatar = styled.img`\r\n    width: 150px;\r\n    height: 180px;\r\n\r\n    @media (max-width: 768px) {\r\n    width: 80%;\r\n    max-width: 250px;\r\n    height: auto;\r\n    margin-bottom: 20px;\r\n    }\r\n`\r\n\r\nexport const WrapForTags = styled.div`\r\n    display: flex;\r\n    gap:10px;\r\n\r\n`\r\n\r\nexport const TagsCard = styled.span`\r\n    color: #fefff1;\r\n    background-color: ${props => typesColor[props.props]};\r\n    border-radius: 4px;\r\n    padding: 2px 8px;\r\n\r\n    @media (max-width: 768px) {\r\n    font-size: 26px;\r\n    }\r\n`\r\n\r\nexport const ListStat = styled.ul`\r\n    margin: 0;\r\n    padding: 0;\r\n`\r\n\r\nexport const ItemStat = styled.li`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    gap: 10px;\r\n    \r\n`\r\n\r\n\r\n","import { Avatar, ItemStat, ListStat, TagsCard, TitleCard, WrapForTags, Wrapper } from \"./CardItem.styled\";\r\nimport image from '../../images/Pokemon.png'\r\n\r\nexport const CardItem = ({poke}) => {\r\n    return(\r\n        <Wrapper>\r\n            <TitleCard>{poke.name.charAt(0).toUpperCase() + poke.name.slice(1)}</TitleCard>\r\n            <Avatar src={poke.sprites.other.dream_world.front_default || poke.sprites.front_default || image} alt={poke.name} width={\"150px\"} />\r\n            <WrapForTags>{poke.types.map(item=> <TagsCard props={item.type.name} key={item.slot}>{item.type.name} </TagsCard>)} </WrapForTags>  \r\n            <ListStat>\r\n                {poke.stats.map(item => \r\n                <ItemStat key={item.stat.name}> \r\n                    <span>{item.stat.name}:</span> <span>{item.base_stat}</span> \r\n                </ItemStat>)}\r\n            </ListStat>\r\n        </Wrapper>\r\n        \r\n    )\r\n}\r\n","import styled from \"styled-components\";\r\nimport { typesColor } from \"../CardItem/CardItem.styled\";\r\n\r\nexport const Wrapper = styled.div`\r\n    display: flex;\r\n    gap: 15px;\r\n    flex-wrap: wrap;\r\n`\r\n\r\nexport const TagsBtn = styled.button`\r\n    font-size: 24px;\r\n    background-color: ${props => typesColor[props.color]};\r\n    border-width: 2px;\r\n    border-style: solid;\r\n    color: ${props => props.isActive ? \"black\" : \"#fefff1\"};\r\n    border-color: ${props => props.isActive ? \"black\" : \"#fefff1\"};\r\n    text-decoration:  ${props => props.isActive ? \"underline\" : \"none\"};\r\n    border-radius: 8px;\r\n    padding: 4px 12px;\r\n    transform: ${props => props.isActive ? \"scale(1.1)\" : \"scale(1)\"};\r\n    cursor: pointer;\r\n    transition-property: box-shadow;\r\n    transition-duration: 0.4s;\r\n    transition-timing-function: ease;\r\n\r\n    :hover,\r\n    :focus{\r\n        box-shadow: 0px 7px 7px 0px rgba(0, 123, 255, 0.3);\r\n    }\r\n`","import { useDispatch, useSelector } from \"react-redux\"\r\nimport { selectFilterTags, selectTypes } from \"../../redux/selectors\";\r\nimport { useEffect } from \"react\";\r\nimport { getTypes } from \"../../redux/operations\";\r\nimport { TagsBtn, Wrapper } from \"./FilterTags.styled\";\r\nimport { changeFilterTags } from \"../../redux/slice\";\r\n\r\nexport const FilterTags=()=>{\r\n    const dispatch = useDispatch();\r\n    const types = useSelector(selectTypes);\r\n    const filterTags = useSelector(selectFilterTags);\r\n\r\n    useEffect(() => {\r\n        dispatch(getTypes());\r\n    }, [dispatch]);\r\n\r\n    function handleBtn (type) {\r\n        dispatch(changeFilterTags(type));\r\n    } \r\n\r\n    return(\r\n        <Wrapper>\r\n            {types.map(type => \r\n            <TagsBtn key={type} type=\"button\" \r\n            color={type} \r\n            isActive={filterTags.includes(type)} \r\n            onClick={()=>handleBtn(type)} \r\n        >\r\n                {type}\r\n            </TagsBtn>)}\r\n        </Wrapper>\r\n    )\r\n}","import styled from 'styled-components';\r\n\r\nexport const StyledInput = styled.input`\r\n    margin: 0 auto;\r\n    background-color: transparent;\r\n    border: none;\r\n    font-size: 18px;\r\n    padding: 7px 7px; \r\n    border-bottom: 2px solid #ccc;\r\n    width: 300px;\r\n    outline: none;\r\n    transition: box-shadow 0.2s ease-in-out, border-bottom-color 0.2s ease-in-out;\r\n\r\n\r\n    &:focus,\r\n    :hover {\r\n        box-shadow: 0px 7px 7px 0px rgba(0, 123, 255, 0.3);\r\n        border-bottom-color: green;\r\n    }\r\n`;","import { useDispatch } from 'react-redux';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectFilterName } from '../../redux/selectors';\r\nimport { changeFilterName } from '../../redux/slice';\r\nimport { StyledInput } from './FilterName.styled';\r\n\r\n\r\nexport const FilterName = () => {\r\n    const filterName = useSelector(selectFilterName);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleFilter = evt =>{\r\n        dispatch(changeFilterName(evt.target.value))\r\n    }\r\n    \r\n    return(\r\n        <>\r\n            <StyledInput onChange={handleFilter} value={filterName} type=\"text\" name=\"filter\" placeholder='Find Pokemon by name'/>\r\n        </>    \r\n    )\r\n}","import styled from 'styled-components'; \r\nimport Select from 'react-select';\r\n\r\nexport const Wrapper = styled.div`\r\n    display: flex;\r\n   margin-bottom: 30px;\r\n    justify-content: center;\r\n    gap: 30px;\r\n`\r\n\r\nexport const SelectStyled = styled(Select)`\r\n    width: 90px;\r\n    transition: border-color 0.2s ease-in-out;\r\n \r\n    height: 36px;\r\n\r\n    &:hover {\r\n        /* box-shadow: 0px 7px 7px 0px rgba(0, 123, 255, 0.3); */\r\n        border-color: blue;\r\n    }\r\n`","import { useDispatch, useSelector } from 'react-redux';\r\nimport { selectCount, selectPage, selectPerPage } from '../../redux/selectors';\r\nimport { changePage, changePerPage } from '../../redux/slice';\r\nimport { SelectStyled, Wrapper } from './Pagination.styled';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { PaginationControl } from 'react-bootstrap-pagination-control';\r\n\r\n\r\nconst options = [\r\n    { value: 10, label: 10 },\r\n    { value: 20, label: 20 },\r\n    { value: 50, label: 50 },\r\n  ];\r\n\r\nexport const Pagination = () => {\r\n    const page = useSelector(selectPage);\r\n    const perPage = useSelector(selectPerPage);\r\n    const count = useSelector(selectCount);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleSelect = (selectedOption) => {\r\n        dispatch(changePerPage(selectedOption.value));\r\n        console.log(\"select\", selectedOption.value)\r\n        console.log(\"perPage\", perPage)\r\n    }\r\n\r\n    return(\r\n        <Wrapper >\r\n            <SelectStyled\r\n                defaultValue={perPage}\r\n                onChange={handleSelect}\r\n                options={options}\r\n                placeholder={perPage}\r\n                value={perPage}\r\n            />\r\n            <PaginationControl\r\n                page={page}\r\n                between={3}\r\n                total={count}\r\n                limit={perPage}\r\n                changePage={(currentPage) => {\r\n                dispatch(changePage(currentPage)); \r\n                console.log(currentPage);\r\n                }}\r\n                ellipsis={2}\r\n            />\r\n        </Wrapper>\r\n    )\r\n}","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport { selectFilterName, selectFilterTags, selectIsLoading, selectIsLoadingPokemons, selectPage, selectPerPage, selectPokemons, selectResult } from \"../../redux/selectors\";\r\nimport { fetchPokemons, getPokemonData} from \"../../redux/operations\";\r\n// import { changePage } from \"../../redux/slice\";\r\n\r\nimport { List, BtnGoBack, Container, WrapForBtn, Notification} from \"./CardList.styled\";\r\nimport { FiArrowLeft } from \"react-icons/fi\";\r\nimport { Loader } from \"../Loader/Loader\";\r\nimport { CardItem } from \"../CardItem/CardItem\";\r\nimport { FilterTags } from \"../FilterTags/FilterTags\";\r\nimport { FilterName } from \"../FilterName/FilterName\";\r\nimport { Pagination } from \"../Pagination/Pagination\";\r\n\r\n\r\nexport const CardList = () => {\r\n    const pokemons = useSelector(selectPokemons);\r\n    const result = useSelector(selectResult);\r\n    const page = useSelector(selectPage);\r\n    const perPage = useSelector (selectPerPage);\r\n    const isLoading = useSelector(selectIsLoading);\r\n    const isLoadingPokemons = useSelector(selectIsLoadingPokemons);\r\n    const filterName = useSelector(selectFilterName);\r\n    const filterTags = useSelector(selectFilterTags);\r\n\r\n    const dispatch = useDispatch();\r\n    const location = useLocation();\r\n\r\n    const filterPokemons = pokemons\r\n    .filter(pokemon => pokemon.name.includes(filterName.toLowerCase()))\r\n\r\n\r\n    const filterByTags = () => {\r\n        if (filterTags.length === 0) {\r\n            return filterPokemons;\r\n        }\r\n        const newArr = filterPokemons.filter(pokemon => pokemon.types.length === 1  \r\n            ? filterTags.includes(pokemon.types[0].type.name) \r\n            : (filterTags.includes(pokemon.types[1].type.name) || filterTags.includes(pokemon.types[0].type.name)))\r\n        return newArr;\r\n    };\r\n    \r\n\r\n    // const handleLoadMore = () => {\r\n    //     dispatch(changePage(page+1))\r\n    //   };\r\n    \r\n    useEffect(() => {\r\n        dispatch(fetchPokemons({page, perPage}));\r\n    }, [dispatch, page, perPage]);\r\n\r\n    useEffect(()=>{\r\n        dispatch(getPokemonData(result));\r\n    }, [dispatch, result])\r\n\r\n\r\n    return(\r\n        <Container>\r\n            {isLoading && <Loader/>}\r\n            <WrapForBtn>\r\n              <BtnGoBack to={location.state?.from ?? \"/\"} >\r\n                <FiArrowLeft\r\n                    style={{\r\n                        cursor: \"pointer\",\r\n                        padding: \"2px\",\r\n                        width: \"30px\",\r\n                        height: \"25px\",\r\n                    }}\r\n                    />\r\n                <span>Go Back</span>\r\n                </BtnGoBack>\r\n\r\n                <FilterName/>  \r\n            </WrapForBtn>\r\n\r\n            <Pagination/>\r\n             \r\n            <FilterTags/>\r\n            \r\n            {isLoadingPokemons && <Loader/> }\r\n            {(!isLoadingPokemons && filterByTags().length === 0)\r\n                    ? <Notification>Nothing was found for your request\r\n                        \r\n                    </Notification> \r\n                    : <List>\r\n                    {filterByTags().map(poke=><CardItem key = {poke.id} poke={poke}/>)}\r\n                </List>\r\n            } \r\n            \r\n            \r\n            {/* {(!isLoadingPokemons && filterByTags().length !== 0) &&\r\n            <Btn type=\"button\" onClick={handleLoadMore} disabled={page === 20}>\r\n            Load next page\r\n            </Btn>}  */}\r\n        </Container>\r\n    )\r\n}","import { CardList } from \"../componets/CardList/CardList\";\r\n\r\nexport default function Pokemons() {\r\n    return(\r\n        <div>\r\n            <CardList/>\r\n        </div>\r\n        \r\n    )\r\n}"],"names":["selectPokemons","state","pokemons","selectResult","result","selectPage","page","selectPerPage","perPage","selectCount","count","selectIsLoading","isLoading","selectIsLoadingPokemons","isLoadingPokemons","selectTypes","types","selectFilterName","filterName","selectFilterTags","filterTags","Container","styled","section","_templateObject","_taggedTemplateLiteral","Notification","div","_templateObject2","List","ul","_templateObject3","WrapForBtn","button","_templateObject4","_templateObject5","BtnGoBack","NavLink","_templateObject6","typesColor","Wrapper","li","TitleCard","h2","Avatar","img","WrapForTags","TagsCard","span","props","ListStat","ItemStat","_templateObject7","CardItem","_ref","poke","_jsxs","children","_jsx","name","charAt","toUpperCase","slice","src","sprites","other","dream_world","front_default","image","alt","width","map","item","type","slot","stats","stat","base_stat","TagsBtn","color","isActive","FilterTags","dispatch","useDispatch","useSelector","useEffect","getTypes","includes","onClick","changeFilterTags","handleBtn","StyledInput","input","FilterName","_Fragment","onChange","evt","changeFilterName","target","value","placeholder","SelectStyled","Select","options","label","Pagination","defaultValue","selectedOption","changePerPage","console","log","PaginationControl","between","total","limit","changePage","currentPage","ellipsis","CardList","_location$state$from","_location$state","location","useLocation","filterPokemons","filter","pokemon","toLowerCase","filterByTags","length","fetchPokemons","getPokemonData","Loader","to","from","FiArrowLeft","style","cursor","padding","height","id","Pokemons"],"sourceRoot":""}